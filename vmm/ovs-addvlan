#!/bin/bash

PROGNAME="ovs-addvlan"
REVISION="0.0.2"

function print_usage {
cat <<EOF
  NAME
    $PROGNAME - add vlan to openvswitch network

  SYNOPSIS
    ovs-vlan [-n <name>] [-v <vlanid>] [-p <portgroup name>] [-V] [-h]

  DESCRIPTION
    Use to add a VLAN to an existing and active OpenVSwitch based Libvirt network.

  OPTIONS
    [-n] <string>  Libvirt network name. Must be an openvswitch network
    [-v] <string>  VLAN ID to add to Libvirt network. Must be unique to the libvirt network
    [-p] <string>  Name of the Portgroup for the VLAN. Must be unique to the libvirt network
    [-V]           Shows the version information
    [-h]           Shows this message

EOF
exit 2
}

function print_version {
        echo "$PROGNAME $REVISION"
        echo "Ben Vincent - https://github.com/neoloc/customhosting"
}

function check_network {
  virsh net-info $1 > /dev/null 2>&1
  if [ $? -eq 1 ]; then
    echo "Network: $1 not found"
    return 1
  elif [ -n "$(virsh net-dumpxml $1 | grep openvswitch)" ]; then
    NETWORK=$1
  elif [ -z "$(virsh net-dumpxml $1 | grep openvswitch)" ]; then
    echo "Network: $1 not an openvswitch network"
    return 1
  else
    echo "ERROR: Something went wrong, should not get here. Function 'check_network'"
    return 2
  fi
}

function check_vlan {
  virsh net-dumpxml ovs-network | grep "tag id='${1}'" > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    echo "VLAN: $1 on Network: $NETWORK already exists"
    return 1
  elif [ "$1" -le 0 -a "$1" -ge 4097 ]; then
    echo "VLAN: $1 on is outside the VLAN Specification range. 1 to 4096"
    return 1
  elif [ "$1" -eq 1 ]; then
    echo "VLAN: $1 is the default vlan and already exists"
    return 1
  else
    VLAN=$1
}

function check_portgroup {
  virsh net-dumpxml ovs-network | grep "portgroup name='${1}'" > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    echo "PortGroup: $1 on Network: $NETWORK already exists"
    return 1
  else
  PORTGROUP=$1
}

while getopts ":V:h:n:v:p" optname
    do
      case "$optname" in
        V) print_version; exit 2 ;;
        h) print_usage; exit 2;;
        n) TEMP_NETWORK=${OPTARG};;
        v) TEMP_VLAN=${OPTARG};;
        p) TEMP_PORTGROUP=${OPTARG};;
        *)
        # Should not occur
          echo "Unknown error while processing options"
          ;;
      esac
done

if [ -n $TEMP_NETWORK ]; then
  check_network $TEMP_NETWORK
  if [ $? -eq 0 ] && [ -n $NETWORK ] && [ -n $TEMP_VLAN ]; then
    check_vlan $TEMP_VLAN
    if [ $? -eq 0 ] && [ -n $VLAN ] && [ -n $TEMP_PORTGROUP ]; then
      check_portgroup $TEMP_PORTGROUP
      if [ $? -eq 0 ] && [ -n $PORTGROUP ] && [ -n $TEMP_PORTGROUP ]; then
    elif [ -z $TEMP_PORTGROUP ]; then echo "ERROR: PortGroup not set"; print_usage
    fi
  elif [ -z $TEMP_VLAN ]; then echo "ERROR: VLAN not set"; print_usage
  fi
elif [ -z $TEMP_NETWORK ]; then echo "ERROR: Network not set"; print_usage
fi
