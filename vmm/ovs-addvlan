#!/bin/bash

PROGNAME="ovs-addvlan"
REVISION="0.0.2"
OVS_PROGS="~/Projects/customhosting/vmm"	# Location of other ovs scripts
PATH=$OVS_PROGS:$PATH				# Update $PATH for this switches context

function print_usage {
  cat <<EOF
  NAME
    $PROGNAME - add vlan to openvswitch network

  SYNOPSIS
    $PROGNAME [-n <name>] [-v <vlanid>] [-p <portgroup name>] [-V] [-h]

  DESCRIPTION
    Use to create a VLAN based Portgroup on an OpenVSwitch based libvirt network

  OPTIONS
    [-n <network>] 	Libvirt network name. Must be an openvswitch network
    [-v <vlan>] 	VLAN ID to add to Libvirt network.
    [-p <portgroup>]	Name of the Portgroup for the VLAN.
    [-V]		Shows the version information
    [-h]		Shows this message

EOF
  exit 2
}

function print_version {
  echo "$PROGNAME $REVISION"
  echo "Ben Vincent - https://github.com/neoloc/customhosting"
  exit 2
}

function print_gethelp {
  echo ""
  echo "Something went wrong, read the above message for more information."
  echo "Additionally you can get help by running '$PROGNAME -h'"
  exit 2
}

function set_network {
  virsh net-info $TEMP_NETWORK > /dev/null 2>&1
  if [ $? -eq 1 ]; then
    echo "Network not found"
    exit 1
  elif [ -n "$(virsh net-dumpxml $TEMP_NETWORK | grep openvswitch)" ]; then
    NETWORK=$TEMP_NETWORK
  elif [ -z "$(virsh net-dumpxml $TEMP_NETWORK | grep openvswitch)" ]; then
    echo "Network: $TEMP_NETWORK not an openvswitch network"
    exit 1
  else
    echo "ERROR: Something went wrong, should not get here. Function 'set_network'"
    exit 2
  fi
}

function set_vlan {
  virsh net-dumpxml ovs-network | grep "tag id='${TEMP_VLAN}'" > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    echo "VLAN: $TEMP_VLAN on Network: $NETWORK already exists"
    exit 1
  elif [ $TEMP_VLAN -le 0 ] && [ $TEMP_VLAN -ge 4097 ]; then
    echo "VLAN: $TEMP_VLAN on is outside the VLAN Specification range. 1 to 4096"
    exit 1
  elif [ $TEMP_VLAN -eq 1 ]; then
    echo "VLAN: $TEMP_VLAN is the default vlan and already exists"
    exit 1
  else
    VLAN=$TEMP_VLAN
  fi
}

function set_portgroup {
  virsh net-dumpxml ovs-network | grep "portgroup name='${TEMP_PORTGROUP}'" > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    echo "PortGroup: $TEMP_PORTGROUP on Network: $NETWORK already exists"
    exit 1
  else
  PORTGROUP=$TEMP_PORTGROUP
  fi
}

# Check if there are any arguments
if [[ $# -eq 0 ]]; then
  echo "No arguments supplied"
  print_gethelp
  exit 1
fi

# Set some temporary variables
TEMP_NETWORK="z"
TEMP_VLAN="z"
TEMP_PORTGROUP="z"

# Get flags and options
while getopts 'Vhn:v:p:' flag; do
  case "${flag}" in
    n) TEMP_NETWORK="${OPTARG}";;
    v) TEMP_VLAN="${OPTARG}";;
    p) TEMP_PORTGROUP="${OPTARG}";;
    V) print_version ;;
    h) print_usage ;;
  esac
done

# Check the arguments were stored in the variables
if [ "$TEMP_NETWORK" = "z" ]; then echo "ERROR: Network not set."; print_gethelp; fi
if [ "$TEMP_VLAN" = "z" ]; then echo "ERROR: VLAN not set."; print_gethelp; fi
if [ "$TEMP_PORTGROUP" = "z" ]; then echo "ERROR: Portgroup not set."; print_gethelp; fi

# Process
set_network
set_vlan
set_portgroup
if [ -n $NETWORK ] && [ -n $VLAN ] && [ -n $PORTGROUP ]; then
  virsh net-update $NETWORK add portgroup --xml "<portgroup name='${PORTGROUP}'><vlan><tag id='${VLAN}'/></vlan></portgroup>" --live --config
  if [ $? -eq 0 ]; then
    echo -e "\t --> VLAN '$VLAN' has been created as portgroup '$PORTGROUP' on network '$NETWORK'"
  else
    echo "ERROR - VLAN '$VLAN' failed to be created as portgroup '$PORTGROUP' on network '$NETWORK'"
  fi
fi